{
  "anonymous": false,
  "attributes": [
    {
      "name": "Cancel Disabled",
      "values": [
        "true"
      ]
    },
    {
      "name": "Cloning Disabled",
      "values": [
        "true"
      ]
    },
    {
      "name": "Comment Disabled",
      "values": [
        "true"
      ]
    },
    {
      "name": "Submission Workflow",
      "values": [
        "Submitted - True"
      ]
    }
  ],
  "bridgedResources": [
    {
      "model": "Members",
      "name": "Get Family Member",
      "order": [

      ],
      "parameters": [
        {
          "mapping": "${values('Family Member')}",
          "name": "ID"
        }
      ],
      "qualification": "Get Member",
      "status": "Active"
    },
    {
      "model": "Members",
      "name": "Get Member",
      "order": [

      ],
      "parameters": [
        {
          "mapping": "${values('Members')}",
          "name": "ID"
        }
      ],
      "qualification": "Get Member",
      "status": "Active"
    },
    {
      "model": "Program Fees",
      "name": "Get Program",
      "order": [

      ],
      "parameters": [
        {
          "mapping": "${values('Programs')}",
          "name": "ID"
        }
      ],
      "qualification": "By ID",
      "status": "Active"
    },
    {
      "model": "Terms and Conditions",
      "name": "Get Terms and Conditions",
      "order": [

      ],
      "parameters": [
        {
          "mapping": "Paysmart Member Registration",
          "name": "Type"
        }
      ],
      "qualification": "Paysmart Member Registration",
      "status": "Active"
    },
    {
      "model": "Members",
      "name": "Members",
      "order": [

      ],
      "parameters": [

      ],
      "qualification": "Active Members",
      "status": "Active"
    },
    {
      "model": "Program Fees",
      "name": "Program Fees",
      "order": [

      ],
      "parameters": [
        {
          "mapping": "${values('Payment Frequency')}",
          "name": "Frequency"
        }
      ],
      "qualification": "By Frequency",
      "status": "Active"
    }
  ],
  "categorizations": [
    {
      "category": {
        "slug": "billing-registration"
      }
    }
  ],
  "customHeadContent": "<style>\n  .hidden{\n   display:none; \n  }\n\t.acceptTerms + label {\n    margin-left: 20px !important;\n\t}  \n  body a {\n      color: #003b72;\n  }    \n  button.editButton {\n    border-radius: .25rem;\n    line-height: 1.0rem;\n    padding: .2rem 0.8rem;\n    margin-right: .5rem;\n    border: none;\n    color: #fff;\n    font-size: .75rem;\n    background-color: #0c384f;\n}\n</style>\n<script>\nfunction completeTableChange(){\n  K('field[Family Member]').value(\"\");\n  K('field[Programs]').value(\"\");\n  K('field[tableMemberID]').value(\"\");\n  K('field[tableMemberName]').value(\"\");\n  K('field[tableProgram]').value(\"\");\n  K('field[tableFee]').value(\"\");\n  \n  // Sort table\n  viewerConfig.response.sort(function(a, b){return b.cost - a.cost});\n  // Let calculate the discounts\n  viewerConfig.response.forEach(function(item, index){\n    if (index===0){\n      item.discount=\"0%\";\n      item.fee=((new Number(item.cost))).toFixed(2);\n    } else if(index===1){\n      item.discount=\"10%\";\n      item.fee=((new Number(item.cost))*0.9).toFixed(2);\n    } else if(index===2){\n      item.discount=\"20%\";\n      item.fee=((new Number(item.cost))*0.8).toFixed(2);\n    } else if(index>=3){\n      item.discount=\"30%\";\n      item.fee=((new Number(item.cost))*0.7).toFixed(2);\n    }      \n  });\n  \n  // Set payment value\n  var total=0;\n  viewerConfig.response.forEach(function(item, index){\n\t\ttotal=total+(new Number((new Number(item.fee)).toFixed(2)));\n  });\n  K('field[I promise to pay equal FREQUENCY instalments of]').value(total);\n\n  global.viewerConfig.renderer.type($('#memberTableDiv'),global.viewerConfig);\n\n  $('#member-table tbody tr').on( 'click', function () {\n    if ( $(this).hasClass('selected') ) {\n      $(this).removeClass('selected');\n    }\n    else {\n      $('#member-table').DataTable().$('tr.selected').removeClass('selected');\n      $(this).addClass('selected');\n    }\n  } );  \n  \n}  \n  \nfunction memberProgramAdded(memberID, feeProgram) {\n  found=false;\n\n  viewerConfig.response.forEach(function(item){\n      if (item.id===memberID && item.feeProgram===feeProgram) {\n        found=true;\n      }\n  });  \n  return found;\n}\n</script>\n<script>\nfunction enabledAddressEdit(){\n  K('field[Address]').enable();\n  K('field[Suburb]').enable();\n  K('field[State]').enable();\n  K('field[Postcode]').enable();\n}\nfunction geolocate() {\n  if (navigator.geolocation) {\n    navigator.geolocation.getCurrentPosition(function(position) {\n      var geolocation = {\n        lat: position.coords.latitude,\n        lng: position.coords.longitude\n      };\n      var circle = new google.maps.Circle(\n          {center: geolocation, radius: position.coords.accuracy});\n      autocomplete.setBounds(circle.getBounds());\n    });\n  }\n}\nfunction fillInAddress() {\n  K(\"field[Address]\").value(\"\");\n\n  // Get the place details from the autocomplete object.\n  var place = autocomplete.getPlace();\n\ndebugger;\n  // Get each component of the address from the place details,\n  // and then fill-in the corresponding field on the form.\n  for (var i = 0; i < place.address_components.length; i++) {\n    var addressType = place.address_components[i].types[0];\n\n    if (addressType===\"street_number\") {\n    \tK(\"field[Address]\").value(place.address_components[i][\"long_name\"]);\n    }\n    if (addressType===\"route\") {\n    \tK(\"field[Address]\").value(K(\"field[Address]\").value()+\" \"+place.address_components[i][\"long_name\"]);\n    }\n    if (addressType===\"locality\") {\n    \tK(\"field[Suburb]\").value(place.address_components[i][\"long_name\"]);\n    }\n    if (addressType===\"administrative_area_level_1\") {\n    \tK(\"field[State]\").value(place.address_components[i][\"short_name\"]);\n    }\n    if (addressType===\"postal_code\") {\n    \tK(\"field[Postcode]\").value(place.address_components[i][\"short_name\"]);\n    }\n    if (addressType===\"country\") {\n    \tK(\"field[Country]\").value(place.address_components[i][\"long_name\"]);\n    }\n  }\n}  \nfunction initAutocomplete() {\n  debugger;\n  if (document.getElementById('autocomplete')!==undefined) {\n    // Create the autocomplete object, restricting the search predictions to\n    // geographical location types.\n    autocomplete = new google.maps.places.Autocomplete(\n        document.getElementById('autocomplete'), {types: ['geocode']});\n\n    // Avoid paying for data that you don't need by restricting the set of\n    // place fields that are returned to just the address components.\n    autocomplete.setFields(['address_component']);\n\n    // When the user selects an address from the drop-down, populate the\n    // address fields in the form.\n    autocomplete.addListener('place_changed', fillInAddress);\n  }\n}  \n</script>\n\n<script src=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyANn8OeuTR-YH0f-l7S-Qk04cROra8iUfM&libraries=places&callback=initAutocomplete\"\n        async defer>\n</script>",
  "description": "Record a members Registration details.\nNo Billing changes are applied.",
  "name": "Member Registration",
  "notes": null,
  "pages": [
    {
      "advanceCondition": null,
      "displayCondition": null,
      "displayPage": null,
      "elements": [
        {
          "type": "section",
          "renderType": null,
          "name": "Select Member",
          "title": "Select Member",
          "visible": "!form('review')",
          "omitWhenHidden": false,
          "renderAttributes": {
          },
          "elements": [
            {
              "type": "field",
              "name": "Members",
              "label": "Members",
              "key": "f38",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": false,
              "enabled": true,
              "required": true,
              "requiredMessage": "A member must be selected",
              "omitWhenHidden": false,
              "pattern": null,
              "constraints": [

              ],
              "events": [
                {
                  "name": "Get Members",
                  "type": "Change",
                  "action": "Custom",
                  "code": "K('bridgedResource[Get Member]').load({\n  attributes: ['Member ID', 'First Name', 'Last Name'],\n  values: {'ID' : 'Allen'},\n  success: function(bridgedData) {\n    K('field[Member ID]').value(bridgedData['Member ID']);\n    K('field[Student First Name]').value(bridgedData['First Name']);\n    K('field[Student Last Name]').value(bridgedData['Last Name']);\n    K('field[Billing Customer Id]').value(bridgedData['Billing Customer Id']);\ndebugger;    \n    K('section[Student Information]').show();\n    var tomorrow = new Date((new Date()).getTime() + 24 * 60 * 60 * 1000);\n    bundle.config.widgets.xdsoftDatepicker({\n      element: K(\"form\").find(\"#firstinstallmentdate\")[0],\n      timepicker: false,\n      displayDateFormat: \"DD/MM/YYYY\",\n      options: {\n        startDate: tomorrow,\n        minDate: 0,\n        formatDate:\"d-m-Y\",\n        validateOnBlur:false\n      },\n      onSelectDate:function(ct,$i){\n        K('field[The first instalment is due on]').value(ct.dateFormat('YYYY-MM-DD'));\n      },\n      onGenerate: function( ct ){\n            $('.xdsoft_today')\n              .addClass('xdsoft_disabled');\n            $('.xdsoft_date.xdsoft_weekend')\n              .addClass('xdsoft_disabled');\n          }\n    });          \n  }\n});",
                  "bridgedResourceName": null,
                  "runIf": "values('Members')!==\"\""
                },
                {
                  "name": "Clear Member Details",
                  "type": "Change",
                  "action": "Custom",
                  "code": "K('field[Member ID]').value(\"\");\nK('field[Student First Name]').value(\"\");\nK('field[Student Last Name]').value(\"\");\nK('field[Billing Customer Id]').value(\"\");\n\nK('section[Student Information]').hide();\nK('section[Program Information]').hide();\nK('section[Terms]').hide();\n\nK('section[Member Select Space]').show();    \n",
                  "runIf": "values('Members')===null"
                }
              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "dropdown",
              "choicesResourceName": "Members",
              "choicesRunIf": null,
              "choices": {
                "label": "${resources('Members:First Name')} ${resources('Members:Last Name')}",
                "value": "${resources('Members:id')}"
              }
            },
            {
              "type": "content",
              "renderType": "html",
              "name": "Members Select",
              "text": "<div id=\"selectMemberMenu\"></div>",
              "visible": true,
              "renderAttributes": {
              }
            }
          ]
        },
        {
          "type": "section",
          "renderType": null,
          "name": "Student Information",
          "title": "Student Information",
          "visible": false,
          "omitWhenHidden": false,
          "renderAttributes": {
          },
          "elements": [
            {
              "type": "field",
              "name": "Member ID",
              "label": "Member ID",
              "key": "f39",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": true,
              "enabled": false,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": null,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "field",
              "name": "Student First Name",
              "label": "Student's First Name",
              "key": "f28",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": true,
              "enabled": false,
              "required": true,
              "requiredMessage": null,
              "omitWhenHidden": null,
              "pattern": null,
              "constraints": [

              ],
              "events": [
                {
                  "name": "Set Requested For",
                  "type": "Change",
                  "action": "Set Fields",
                  "mappings": [
                    {
                      "field": "Requested For",
                      "value": "${values('Student First Name')} ${values('Student Last Name')}",
                      "visible": null
                    }
                  ]
                }
              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "field",
              "name": "Student Last Name",
              "label": "Student's Last Name",
              "key": "f29",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": true,
              "enabled": false,
              "required": true,
              "requiredMessage": null,
              "omitWhenHidden": null,
              "pattern": null,
              "constraints": [

              ],
              "events": [
                {
                  "name": "Set Requested For",
                  "type": "Change",
                  "action": "Set Fields",
                  "mappings": [
                    {
                      "field": "Requested For",
                      "value": "${values('Student First Name')} ${values('Student Last Name')}",
                      "visible": null
                    }
                  ]
                }
              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "field",
              "name": "Requested For",
              "label": null,
              "key": "f58",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": false,
              "enabled": true,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": false,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "field",
              "name": "Co-Signer Full Name",
              "label": "Co-Signer's Full Name",
              "key": "f30",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": true,
              "enabled": true,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": null,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "field",
              "name": "Billing Customer Id",
              "label": null,
              "key": "f54",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": true,
              "enabled": true,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": null,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "section",
              "renderType": null,
              "name": "Family Members",
              "title": "Family Members",
              "visible": true,
              "omitWhenHidden": null,
              "renderAttributes": {
              },
              "elements": [
                {
                  "type": "field",
                  "name": "Include Family Members",
                  "label": "Include Family Members",
                  "key": "f44",
                  "defaultValue": "",
                  "defaultResourceName": null,
                  "visible": true,
                  "enabled": true,
                  "required": false,
                  "requiredMessage": null,
                  "omitWhenHidden": null,
                  "pattern": null,
                  "constraints": [

                  ],
                  "events": [

                  ],
                  "renderAttributes": {
                  },
                  "dataType": "string",
                  "renderType": "radio",
                  "choicesResourceName": null,
                  "choicesRunIf": null,
                  "choices": [
                    {
                      "label": "Yes",
                      "value": "Yes"
                    },
                    {
                      "label": "No",
                      "value": "No"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "section",
          "renderType": null,
          "name": "Program Information",
          "title": "Program Information",
          "visible": "values('Include Family Members')!==null",
          "omitWhenHidden": false,
          "renderAttributes": {
          },
          "elements": [
            {
              "type": "field",
              "name": "Payment Frequency",
              "label": "Payment Frequency",
              "key": "f40",
              "defaultValue": "Fortnightly",
              "defaultResourceName": null,
              "visible": true,
              "enabled": true,
              "required": true,
              "requiredMessage": null,
              "omitWhenHidden": null,
              "pattern": null,
              "constraints": [

              ],
              "events": [
                {
                  "name": "Set Frequency Label",
                  "type": "Change",
                  "action": "Custom",
                  "code": "value=K('field[I promise to pay equal FREQUENCY instalments of]').name();\nvalue=value.replace(\"FREQUENCY\", K('field[Payment Frequency]').value());\n$(K('field[I promise to pay equal FREQUENCY instalments of]').wrapper()).find(\"label\").html(value);\n",
                  "runIf": ""
                },
                {
                  "name": "Set Fees",
                  "type": "Change",
                  "action": "Custom",
                  "code": "if (K('field[Payment Frequency]').value()===\"Weekly\"){\n  K('field[Admin Fee]').value(\"$1.30\");\n  K('field[Setup Fee]').value(\"$5.50\");\n} else if (K('field[Payment Frequency]').value()===\"Fortnightly\"){\n  K('field[Admin Fee]').value(\"$1.95\");\n  K('field[Setup Fee]').value(\"$5.50\");\n} else if (K('field[Payment Frequency]').value()===\"Monthly\"){\n  K('field[Admin Fee]').value(\"$2.95\");\n  K('field[Setup Fee]').value(\"$5.50\");\n} else if (K('field[Payment Frequency]').value()===\"Quarterly\"){\n  K('field[Admin Fee]').value(\"$3.95\");\n  K('field[Setup Fee]').value(\"$5.50\");\n}",
                  "runIf": "values('Payment Frequency')!==null"
                }
              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "radio",
              "choicesResourceName": null,
              "choicesRunIf": null,
              "choices": [
                {
                  "label": "Weekly",
                  "value": "Weekly"
                },
                {
                  "label": "Fortnightly",
                  "value": "Fortnightly"
                },
                {
                  "label": "Monthly",
                  "value": "Monthly"
                },
                {
                  "label": "Quarterly",
                  "value": "Quarterly"
                }
              ]
            },
            {
              "type": "field",
              "name": "Family Member",
              "label": "Family Member",
              "key": "f48",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": "values('Include Family Members')===\"Yes\" && !form('review')",
              "enabled": true,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": true,
              "pattern": null,
              "constraints": [

              ],
              "events": [
                {
                  "name": "Get Family Member",
                  "type": "Change",
                  "action": "Set Fields",
                  "mappings": [
                    {
                      "field": "tableMemberName",
                      "value": "${resources('Get Family Member:First Name')} ${resources('Get Family Member:Last Name')}",
                      "visible": true
                    },
                    {
                      "field": "tableMemberID",
                      "value": "${resources('Get Family Member:id')}",
                      "visible": true
                    }
                  ],
                  "bridgedResourceName": "Get Family Member"
                }
              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "dropdown",
              "choicesResourceName": "Members",
              "choicesRunIf": null,
              "choices": {
                "label": "${resources('Members:First Name')} ${resources('Members:Last Name')}",
                "value": "${resources('Members:id')}"
              }
            },
            {
              "type": "field",
              "name": "tableMemberID",
              "label": "tableMemberID",
              "key": "f50",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": false,
              "enabled": true,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": true,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "field",
              "name": "tableMemberName",
              "label": "tableMemberName",
              "key": "f49",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": false,
              "enabled": true,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": true,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "field",
              "name": "Programs",
              "label": "Programs",
              "key": "f45",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": "values('Payment Frequency')!==null && !form('review')",
              "enabled": true,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": true,
              "pattern": null,
              "constraints": [

              ],
              "events": [
                {
                  "name": "Get Program",
                  "type": "Change",
                  "action": "Set Fields",
                  "mappings": [
                    {
                      "field": "tableProgram",
                      "value": "${resources('Get Program:Program')} - ${resources('Get Program:Info')}",
                      "visible": true
                    },
                    {
                      "field": "tableFee",
                      "value": "${resources('Get Program:Fee')}",
                      "visible": true
                    },
                    {
                      "field": "tableFeeProgram",
                      "value": "${resources('Get Program:Program')}",
                      "visible": true
                    }
                  ],
                  "bridgedResourceName": "Get Program"
                }
              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "dropdown",
              "choicesResourceName": "Program Fees",
              "choicesRunIf": "",
              "choices": {
                "label": "${resources('Program Fees:Program')} - ${resources('Program Fees:Info')}",
                "value": "${resources('Program Fees:id')}"
              }
            },
            {
              "type": "field",
              "name": "tableProgram",
              "label": "tableProgram",
              "key": "f47",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": false,
              "enabled": false,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": true,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "field",
              "name": "tableFeeProgram",
              "label": "tableFeeProgram",
              "key": "f53",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": false,
              "enabled": false,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": true,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "field",
              "name": "tableFee",
              "label": "tableFee",
              "key": "f46",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": false,
              "enabled": false,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": true,
              "pattern": null,
              "constraints": [

              ],
              "events": [
                {
                  "name": "Set Fee as Individual",
                  "type": "Change",
                  "action": "Set Fields",
                  "mappings": [
                    {
                      "field": "I promise to pay equal FREQUENCY instalments of",
                      "value": "${values('tableFee')}",
                      "visible": null
                    }
                  ],
                  "runIf": "values('Include Family Members')===\"No\""
                }
              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "section",
              "renderType": null,
              "name": "Add buttons",
              "title": null,
              "visible": "values('Include Family Members')!==null",
              "omitWhenHidden": true,
              "renderAttributes": {
              },
              "elements": [
                {
                  "type": "button",
                  "label": "Add My Program",
                  "name": "Add Current Member",
                  "visible": true,
                  "enabled": true,
                  "renderType": "custom",
                  "renderAttributes": {
                  },
                  "events": [
                    {
                      "name": "Set Current Member",
                      "type": "Click",
                      "action": "Custom",
                      "code": "K('field[tableMemberID]').value(K('field[Members]').value());\nK('field[tableMemberName]').value(K('field[Student First Name]').value()+\" \"+K('field[Student Last Name]').value());\nDataViewer.renderFieldValues($('#memberTableDiv'), global.viewerConfig);\ncompleteTableChange();",
                      "runIf": "values('tableProgram')!=null && values('tableFee')!=null && !memberProgramAdded(K('field[Members]').value(),K('field[tableFeeProgram]').value())"
                    }
                  ]
                },
                {
                  "type": "button",
                  "label": "Add Family Member Program",
                  "name": "Add Family Member Program",
                  "visible": "values('Include Family Members')===\"Yes\"",
                  "enabled": true,
                  "renderType": "custom",
                  "renderAttributes": {
                  },
                  "events": [
                    {
                      "name": "Add Family Member",
                      "type": "Click",
                      "action": "Custom",
                      "code": "DataViewer.renderFieldValues($('#memberTableDiv'), global.viewerConfig);\ncompleteTableChange();\n",
                      "runIf": "values('tableProgram')!=null && values('tableFee')!=null && !memberProgramAdded(K('field[tableMemberID]').value(),K('field[tableFeeProgram]').value())"
                    }
                  ]
                },
                {
                  "type": "button",
                  "label": "Delete Selected Program",
                  "name": "Delete Selected Program",
                  "visible": true,
                  "enabled": true,
                  "renderType": "custom",
                  "renderAttributes": {
                  },
                  "events": [
                    {
                      "name": "Delete Selected Member",
                      "type": "Click",
                      "action": "Custom",
                      "code": "viewerConfig.response.splice([$('#member-table').DataTable().row('.selected').index()],1);\ncompleteTableChange();",
                      "runIf": "$('#member-table tbody tr.selected').length>0"
                    }
                  ]
                }
              ]
            },
            {
              "type": "content",
              "renderType": "html",
              "name": "Members Table",
              "text": "<div id='memberTableDiv'></div>",
              "visible": "values('Include Family Members')!==null",
              "renderAttributes": {
              }
            },
            {
              "type": "field",
              "name": "membersJSON",
              "label": "membersJSON",
              "key": "f52",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": false,
              "enabled": true,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": false,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "field",
              "name": "feesJSON",
              "label": "feesJSON",
              "key": "f51",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": false,
              "enabled": true,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": false,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "field",
              "name": "I promise to pay equal FREQUENCY instalments of",
              "label": "I promise to pay equal FREQUENCY instalments of",
              "key": "f31",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": "values('Payment Frequency')!=null",
              "enabled": true,
              "required": "values('Payment Frequency')!=null",
              "requiredMessage": null,
              "omitWhenHidden": true,
              "pattern": {
                "regex": "^-?\\d*(.\\d+)?$",
                "message": "Please enter a valid decimal value"
              },
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "content",
              "renderType": "html",
              "name": "The first instalment is due on HTML",
              "text": "<div class=\"form-group required\" linkedField=\"The first instalment is due on\">  \n  <label class=\"field-label\" for=\"firstinstallmentdate\">to <span class='schoolName'></span>. The first instalment is due on</label>\n  <div id=\"firstinstallmentdate\"></div>\n</div>",
              "visible": "!form('review')",
              "renderAttributes": {
              }
            },
            {
              "type": "field",
              "name": "The first instalment is due on",
              "label": "to <span class='schoolName'></span>. The first instalment is due on",
              "key": "f32",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": "form('review')",
              "enabled": true,
              "required": true,
              "requiredMessage": null,
              "omitWhenHidden": false,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "date"
            },
            {
              "type": "content",
              "renderType": "html",
              "name": "Payment information description",
              "text": "and subsequent instalments are to be paid each fortnight afterwards until I give notice that I wish to stop payments according to the terms and conditions including cancellation and membership freeze terms below.",
              "visible": true,
              "renderAttributes": {
              }
            },
            {
              "type": "field",
              "name": "Admin Fee",
              "label": "Admin Fee",
              "key": "f41",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": true,
              "enabled": false,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": null,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "field",
              "name": "Setup Fee",
              "label": "Setup Fee",
              "key": "f42",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": true,
              "enabled": false,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": null,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "content",
              "renderType": "html",
              "name": "Instalment Signature",
              "text": "<label class=\"field-label required\">Instalment Signature</label>\n<div id=\"installment-signature-canvas\"/>",
              "visible": true,
              "renderAttributes": {
              }
            },
            {
              "type": "field",
              "name": "Encoded Instalment Signature",
              "label": "Encoded Instalment Signature",
              "key": "f33",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": false,
              "enabled": "K('field[Members]').value()!==\"\"",
              "required": true,
              "requiredMessage": "Instalment Signature is required",
              "omitWhenHidden": false,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            }
          ]
        },
        {
          "type": "section",
          "renderType": null,
          "name": "Accept Terms and Conditions",
          "title": null,
          "visible": "values('Include Family Members')!==null",
          "omitWhenHidden": false,
          "renderAttributes": {
          },
          "elements": [
            {
              "type": "field",
              "name": "Accept Gracie Barra Terms and Conditions",
              "label": "Gracie Barra <a href=\"javascript:$(K('section[Terms]').element()).toggle('slow')\">Terms and Conditions</a>",
              "key": "f57",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": true,
              "enabled": true,
              "required": true,
              "requiredMessage": null,
              "omitWhenHidden": null,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
                "class": "acceptTerms"
              },
              "dataType": "json",
              "renderType": "checkbox",
              "choicesResourceName": null,
              "choicesRunIf": null,
              "choices": [
                {
                  "label": "Accept Gracie Barra Terms and Conditions",
                  "value": "Accept Gracie Barra Terms and Conditions"
                }
              ]
            },
            {
              "type": "section",
              "renderType": null,
              "name": "Terms",
              "title": null,
              "visible": false,
              "omitWhenHidden": false,
              "renderAttributes": {
              },
              "elements": [
                {
                  "type": "field",
                  "name": "Terms Information Text",
                  "label": "Terms Information Text",
                  "key": "f56",
                  "defaultValue": null,
                  "defaultResourceName": null,
                  "visible": false,
                  "enabled": true,
                  "required": false,
                  "requiredMessage": null,
                  "omitWhenHidden": false,
                  "pattern": null,
                  "constraints": [

                  ],
                  "events": [

                  ],
                  "renderAttributes": {
                  },
                  "dataType": "string",
                  "renderType": "text",
                  "rows": 1
                },
                {
                  "type": "content",
                  "renderType": "html",
                  "name": "Terms Information",
                  "text": "<span id=\"termsInformation\"/>",
                  "visible": true,
                  "renderAttributes": {
                  }
                }
              ]
            }
          ]
        },
        {
          "type": "section",
          "renderType": null,
          "name": "Signatures",
          "title": "Signatures",
          "visible": "values('Include Family Members')!==null",
          "omitWhenHidden": false,
          "renderAttributes": {
          },
          "elements": [
            {
              "type": "field",
              "name": "Term Date",
              "label": "Term Date",
              "key": "f34",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": true,
              "enabled": true,
              "required": true,
              "requiredMessage": null,
              "omitWhenHidden": null,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "date"
            },
            {
              "type": "content",
              "renderType": "html",
              "name": "Gracie Barra Rep Signature",
              "text": "<label class=\"field-label required\">Gracie Barra Representative Signature</label><div id=\"gbrepresentative-signature-canvas\"/>",
              "visible": false,
              "renderAttributes": {
              }
            },
            {
              "type": "field",
              "name": "Encoded Gracie Barra Rep Signature",
              "label": "Encoded Gracie Barra Rep Signature",
              "key": "f35",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": false,
              "enabled": true,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": false,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "content",
              "renderType": "html",
              "name": "Student Signature",
              "text": "<label class=\"field-label required\">Student Signature</label>\n<div id=\"student-signature-canvas\"/>",
              "visible": true,
              "renderAttributes": {
              }
            },
            {
              "type": "field",
              "name": "Encoded Student Signature",
              "label": "Encoded Student Signature",
              "key": "f36",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": false,
              "enabled": true,
              "required": true,
              "requiredMessage": "Student Signature is required",
              "omitWhenHidden": false,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "content",
              "renderType": "html",
              "name": "Parent Signature",
              "text": "<label class=\"field-label required\">Parent Signature</label>\n<div id=\"parent-signature-canvas\"/>",
              "visible": true,
              "renderAttributes": {
              }
            },
            {
              "type": "field",
              "name": "Encoded Parent Signature",
              "label": "Encoded Parent Signature",
              "key": "f37",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": false,
              "enabled": true,
              "required": true,
              "requiredMessage": "Parent Signature is required",
              "omitWhenHidden": false,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            }
          ]
        },
        {
          "type": "section",
          "renderType": null,
          "name": "Member Select Space",
          "title": null,
          "visible": "values('Include Family Members')===null",
          "omitWhenHidden": true,
          "renderAttributes": {
          },
          "elements": [
            {
              "type": "content",
              "renderType": "html",
              "name": "Member Select Space",
              "text": "<div style=\"height:300px\"></div>",
              "visible": true,
              "renderAttributes": {
              }
            }
          ]
        },
        {
          "type": "button",
          "label": "Submit",
          "name": "Submit Button",
          "visible": true,
          "enabled": true,
          "renderType": "submit-page",
          "renderAttributes": {
          }
        }
      ],
      "events": [
        {
          "name": "Load Signatures",
          "type": "Load",
          "action": "Custom",
          "code": "bundle.config.widgets.signatureCanvas({\n  element: K(\"form\").find(\"#installment-signature-canvas\")[0],\n  initialValue: K(\"field[Encoded Instalment Signature]\").value(),\n  onChange: function(value) {\n\t  K(\"field[Encoded Instalment Signature]\").value(value);\n\t},\n  height: 250,\n  width: 500,\n  disable: form('review'),\n  ref: function(el) {\n    window.representativeSignaturePad = el;\n  },\n});\n\nbundle.config.widgets.signatureCanvas({\n  element: K(\"form\").find(\"#gbrepresentative-signature-canvas\")[0],\n  initialValue: K(\"field[Encoded Gracie Barra Rep Signature]\").value(),\n  onChange: function(value) {\n    K(\"field[Encoded Gracie Barra Rep Signature]\").value(value);\n  },\n  height: 250,\n  width: 500,\n  disable: form('review'),\n  ref: function(el) {\n    window.representativeSignaturePad = el;\n  },\n});\n\nbundle.config.widgets.signatureCanvas({\n  element: K(\"form\").find(\"#student-signature-canvas\")[0],\n  initialValue: K(\"field[Encoded Student Signature]\").value(),\n  onChange: function(value) {\n    K(\"field[Encoded Student Signature]\").value(value);\n  },\n  height: 250,\n  width: 500,\n  disable: form('review'),\n  ref: function(el) {\n    window.studentSignaturePad = el;\n  },\n});\n\nbundle.config.widgets.signatureCanvas({\n  element: K(\"form\").find(\"#parent-signature-canvas\")[0],\n  initialValue: K(\"field[Encoded Parent Signature]\").value(),\n  onChange: function(value) {\n    K(\"field[Encoded Parent Signature]\").value(value);\n  },\n  height: 250,\n  width: 500,\n  disable: form('review'),\n  ref: function(el) {\n    window.parentSignaturePad = el;\n  },\n});\n\n",
          "runIf": ""
        },
        {
          "name": "Load Members Select",
          "type": "Load",
          "action": "Custom",
          "code": "bundle.config.widgets.selectMenu({\n  element: K(\"form\").find(\"#selectMemberMenu\")[0],\n\toptions: K('field[Members]').options(),\n  onChange: function(option) {\n\t  K('field[Members]').value(option.value);\n    setTimeout(function(){\n\t    $(K(\"form\").find(\"#selectMemberMenu .css-1492t68\")).html(option.label);\n    },100);\n\t},\n  value: K('field[Members]').value(),\n});\n"
        },
        {
          "name": "Handle Errors",
          "type": "Submit",
          "action": "Custom",
          "code": "if (!jQuery.isEmptyObject(K('form').validate())){\n  setTimeout(function(){\n  if ($(\".has-error\").length>0){\n    $(\".has-error\").each(function(i,l) { \n      if ($(l).attr(\"data-element-name\").indexOf(\"Signature\")!==-1) {\n        sigCanElName=$(l).attr(\"data-element-name\").replace(\"Encoded \",\"\");\n        $(K('content['+sigCanElName+']').element()).addClass(\"has-error\");\n      }\n    })  \n    $('.main-container').animate({\n      scrollTop: 0\n    },500);\n  }\n  },100);\n}"
        },
        {
          "name": "Load Previous set page",
          "type": "Load",
          "action": "Custom",
          "code": "K('section[Student Information]').show();\nK('section[Program Information]').show();\nK('section[Terms]').show();\n\nK('section[Member Select Space]').hide();    \n",
          "runIf": "values('Members')!==null"
        },
        {
          "name": "Set Payment Frequencies",
          "type": "Load",
          "action": "Custom",
          "code": "options=[];\nvar freqValue=K('field[Payment Frequency]').value();\nK('space').attributes('Payment Frequencies').split(\",\").forEach(function(value) {\n\toptions[options.length]={'label':value,'value':value};\n});\nK('field[Payment Frequency]').options(options);\nsetTimeout(function() { K('field[Payment Frequency]').value(freqValue); }, 100, freqValue);\n\nif (form('review')) K('field[Payment Frequency]').disable();",
          "runIf": ""
        },
        {
          "name": "Load Members Table",
          "type": "Load",
          "action": "Custom",
          "code": "global.viewerConfig ={\n  resultsContainer:\n  '<table cellspacing=\"0\", border=\"0\", class=\"table table-striped table-bordered table-condensed dataTable\">',\n  data: [\n  {\n  title: 'MemberID',\n  name: 'id',\n  setField: 'tableMemberID',\n  class: 'hidden'\n  },\n  {\n  title: 'Name',\n  name: 'Name',\n  setField: 'tableMemberName'\n  },\n  {\n  title: 'Fee Program',\n  name: 'feeProgram',\n  setField: 'tableFeeProgram',\n  class: 'hidden'\n  },\n  {\n  title: 'Program',\n  name: 'program',\n  setField: 'tableProgram'\n  },\n  {\n  title: 'Fee',\n  name: 'fee',\n  setField: 'tableFee'\n  },\n  {\n  title: 'Cost',\n  name: 'cost',\n  class: 'hidden',\n  setField: 'tableFee'\n  },\n\t{\n  title: 'Discount',\n  name: 'discount',\n  setField: 'tableDiscount'\n  },\n],\n  resultsContainerId: 'member-table',\n  before: function(configObj) {\n\n  },\n  error: function(configObj) {},\n  complete: function(configObj) {\n\n  },\n  removeOnClick: false,\n  renderer: {\n  type: DataViewer.Renderers.DataTables, // Passing a function here allows for better customization\n  options: {\n  // Options for Render\n  processSingleResult: false,\n  // DataTable OPTIONS; Passing options here make it clear that they are being passed to data tables\n  // responsive: OPTIONAL Default for \"BridgeDataTable\" is true but can be over written.\n  responsive: false,\n  dom: 'tip',\n  orderFixed: [[4, 'desc']], /* Fee */\n  paging: false,\n  scrollY: '60vh',\n  scrollCollapse: true,\n  select: {\n  \tstyle: 'single',\n\t\tselector: 'td:first-child'\n\t},\n  createdRow: function createdRow(row, data, dataIndex) {\n\n  },\n\tdeferRender: true,\n}\n}\n};\nviewerConfig.response = (K('field[feesJSON]').value()===null ? [] : JSON.parse(K('field[feesJSON]').value()));\nDataViewer.renderResults($('#memberTableDiv'), viewerConfig);\n\n"
        },
        {
          "name": "Set JSON",
          "type": "Submit",
          "action": "Custom",
          "code": "K('field[feesJSON]').value(JSON.stringify(viewerConfig.response));\n\nmembers=new Array();\nviewerConfig.response.forEach(function(item){\n  members.push(item.id);\n});\nK('field[membersJSON]').value(JSON.stringify(members));\n\n"
        },
        {
          "name": "Embed School Names",
          "type": "Load",
          "action": "Custom",
          "code": "$(\".schoolName\").html(K('space').attributes('School Name'));\n$(\".legalName\").html(K('space').attributes('School Legal Name'));\n$(\".schoolEmail\").html(K('space').attributes('School Email'));\n\n"
        },
        {
          "name": "Load Terms and Conditions",
          "type": "Load",
          "action": "Custom",
          "code": "K('bridgedResource[Get Terms and Conditions]').load({\n  success: function(bridgedData) {\n    debugger;\n    K('field[Terms Information Text]').value(bridgedData[0][\"Terms Information\"]);\n    $(\"#termsInformation\").html(bridgedData[0][\"Terms Information\"]);\n  }\n});\n",
          "runIf": "K('field[Terms Information Text]').value()===null"
        },
        {
          "name": "Display Terms and Conditions",
          "type": "Load",
          "action": "Custom",
          "code": "$(\"#termsInformation\").html(K('field[Terms Information Text]').value());",
          "runIf": "K('field[Terms Information Text]').value()!==null"
        }
      ],
      "name": "Instalment Information",
      "renderType": "submittable",
      "type": "page"
    }
  ],
  "securityPolicies": [
    {
      "endpoint": "Display",
      "name": "NoBilling Program Managers"
    },
    {
      "endpoint": "Submission Access",
      "name": "Program Managers"
    },
    {
      "endpoint": "Submission Modification",
      "name": "Program Managers"
    }
  ],
  "slug": "nobilling-member-registration",
  "status": "Active",
  "submissionLabelExpression": "${values('First Name')} ${values('Last Name')} Start : ${values('Billing Start Date')}",
  "type": "Service"
}