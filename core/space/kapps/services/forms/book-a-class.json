{
  "anonymous": false,
  "attributes": [
    {
      "name": "Cancel Disabled",
      "values": [
        "true"
      ]
    },
    {
      "name": "Cloning Disabled",
      "values": [
        "true"
      ]
    },
    {
      "name": "Comment Disabled",
      "values": [
        "true"
      ]
    },
    {
      "name": "Submission Workflow",
      "values": [
        "Submitted - True"
      ]
    }
  ],
  "bridgedResources": [
    {
      "model": "Class Booking",
      "name": "Class Bookings",
      "order": [

      ],
      "parameters": [
        {
          "mapping": "${values('Date Selected')}",
          "name": "Class Date"
        },
        {
          "mapping": "${values('Start')}",
          "name": "Class Time"
        },
        {
          "mapping": "${values('Program')}",
          "name": "Program"
        },
        {
          "mapping": "Booked",
          "name": "Status"
        }
      ],
      "qualification": "Class Bookings",
      "status": "Active"
    },
    {
      "model": "Class Schedule",
      "name": "Class Schedules",
      "order": [

      ],
      "parameters": [

      ],
      "qualification": "Class Schedules",
      "status": "Active"
    },
    {
      "model": "Class Booking",
      "name": "Day Bookings",
      "order": [

      ],
      "parameters": [
        {
          "mapping": "${values('Date Selected')}",
          "name": "Class Date"
        }
      ],
      "qualification": "Day Bookings",
      "status": "Active"
    },
    {
      "model": "Members",
      "name": "Load Member",
      "order": [

      ],
      "parameters": [
        {
          "mapping": "${identity('username')}",
          "name": "username"
        }
      ],
      "qualification": "Get Member by Username",
      "status": "Active"
    },
    {
      "model": "Class Booking",
      "name": "My Bookings",
      "order": [

      ],
      "parameters": [
        {
          "mapping": "${values('Today')}",
          "name": "Class Date"
        },
        {
          "mapping": "${values('Member ID')}",
          "name": "Member ID"
        }
      ],
      "qualification": "My Bookings",
      "status": "Active"
    }
  ],
  "categorizations": [
    {
      "category": {
        "slug": "class-bookings"
      }
    }
  ],
  "customHeadContent": "<style>\n#classCalendar {\n    margin: 20px;\n}\n@media (min-width: 750px) {\n  #bookingsTable th {\n      padding-left: 20px;\n      padding-right: 20px;\n  }\n}\n#maxWeeklyMsg {\n  display: none;\n}\n#bookingsTable th {\n    color: white;\n    background-color: #4d5059;\n    border: none;\n    text-transform: uppercase;\n    font-size: 15px;\n    padding-top: 0px;\n    border-radius: 0.4rem;\n    padding-left: 0px;\n    padding-right: 0px;\n}\n\n#bookingsTable td {\n    padding-left: 20px;\n    padding-right: 20px;\n}\n#bookingsTable a {\n    color: #007bff;\n}  \n.waiverButtons {\n    margin: 20px;\n}\n.waiverButtons button {\n\t\tbackground-color: #4d5059;\n    color: white;\n  \tborder-radius: 5px;\n}\n.previewSection h1 {\n    float: left;\n}  \n@media (min-width: 750px) {\n\t.howitworks {\n    width: 50% !important;\n  }\n}\n.howitworks {\n    width: 100%;\n    float: left;\n    clear: left;\n}\n@media (min-width: 750px) {\n\t.reviewdetails {\n    width: 50% !important;\n  }\n}\n.reviewdetails {\n    width: 100%;\n    float: left;\n}\n.howitworks p {\n    margin: 0;\n\t \tline-height: 1.5rem !important; \n}  \n.reviewdetails table {\n    background-color: #e5e4e4;\n    border-radius: 5px;\n}  \n/* Tables\n================================== */\n.Rtable {\n  display: flex;\n  flex-wrap: wrap;\n  margin: 2px 2px 2px 2px;\n  padding: 2px;\n}\n.Rtable-cell {\n  box-sizing: border-box;\n  flex-grow: 1;\n  width: 100%;  // Default to full width\n  padding: 0.8em 1.2em;\n  overflow: hidden; // Or flex might break\n  list-style: none;\n  border: solid @bw white;\n  background: fade(slategrey,20%);\n  > h1, > h2, > h3, > h4, > h5, > h6 { margin: 0; }\n}\n\n/* Table column sizing\n================================== */\n.Rtable--7cols > .Rtable-cell { \n  width: 14.2%; \n}  \n\t.dayButtons a {\t\n  \tcolor:#ffffff !important;\n  }\n  .dayButton {\n  \tbox-shadow:inset 0px 1px 3px 0px #a6adac;\n  \tbackground:linear-gradient(to bottom, #6e6e6e 5%, #686a70 100%);\n  \tbackground-color:#6e6e6e;\n  \tborder-radius:5px;\n  \tborder:1px solid #4d5059;\n  \tdisplay:inline-block;\n  \tcursor:pointer;\n  \tcolor:#ffffff;\n  \tfont-family:Arial;\n  \tfont-size:15px;\n  \tfont-weight:bold;\n  \ttext-decoration:none;\n  \ttext-shadow:0px -1px 0px #505756;\n\t\twidth: 100%;    \n  }\n  .dayButton:hover {\n  \tbackground:linear-gradient(to bottom, #686a70 5%, #6e6e6e 100%);\n  \tbackground-color:#686a70;\n  }\n  .dayButton:active, .dayButton.active {\n      position: relative;\n      background: linear-gradient(to bottom, #aeafb4 5%, #ece9e9 100%);\n      background-color: #adafb2;\n  }\n  .hide {\n    display: none;\n    \n  }\n  #dayClasses {\n      max-width: 400px;\n  }  \n  #dayClasses .classDiv {\n    border-style: solid;\n    border-radius: 5px;\n    border-color: #e3e0e0;\n    padding: 10px;\n    margin-bottom: 2px;\n  }  \n  #dayClasses .GB2, #dayClasses .GB3 { \n\t\tcolor: white;     \n  }\n  .classDiv .dates {\n    float: left;\n  }\n  .classDiv .remaining {\n    padding: 2px;\n    background-color: white;\n    float: right;\n    border-radius: 4px;\n    color: #4d5059;\n  }\n  .classDiv .programDiv {\n      clear: left;\n  }  \n  .classDiv .titleDiv {\n    clear: left;\n  }\n  .classDiv .lastline {\n    clear: left;\n    height: 26px;\n  }\n  .classDiv .lastline .studentsDiv {\n    float: left;\n  }\n  .classDiv .lastline .cancelDiv {\n    padding: 2px;\n    background-color: white;\n    float: right;\n    border-radius: 4px;\n    color: #007bff;\n  }\n  .classDiv .lastline .booknow {\n    float: right;\n    box-shadow: inset 0px 1px 3px 0px #a6adac;\n    background: linear-gradient(to bottom, #6e6e6e 5%, #686a70 100%);\n    background-color: #6e6e6e;\n    border-radius: 5px;\n    border: 1px solid #4d5059;\n    color: white;\n  }\n  .booknow:hover {\n    box-shadow: inset 0px 1px 3px 0px #a6adac !important;\n    background: linear-gradient(to bottom, #d4d2d2 5%, #a7a8a9 100%) !important;\n    background-color: #9f9d9d !important;\n    border: 1px solid #cacbcc !important;\n  }\n  .GB2 .remaining, .GB3 .remaining {\n    color: black;\n  }  \n  .spinner {\n    border: 16px solid #f3f3f3; /* Light grey */\n    border-top: 16px solid #3498db; /* Blue */\n    border-radius: 50%;\n    width: 80px;\n    height: 80px;\n    animation: spin 2s linear infinite;\n    margin: auto;\n  }\n\n  @keyframes spin {\n    0% { transform: rotate(0deg); }\n    100% { transform: rotate(360deg); }\n  }\n\n  .anotherClass, #completeBooking button {\n    box-shadow: inset 0px 1px 3px 0px #a6adac;\n    background: linear-gradient(to bottom, #6e6e6e 5%, #686a70 100%);\n    background-color: #6e6e6e;\n    border-radius: 5px;\n    border: 1px solid #4d5059;\n    color: white;  \n    line-height: unset;\n  }\n  .anotherClass:hover, #completeBooking button:hover {\n    box-shadow: inset 0px 1px 3px 0px #a6adac !important;\n    background: linear-gradient(to bottom, #d4d2d2 5%, #a7a8a9 100%) !important;\n    background-color: #9f9d9d !important;\n    border: 1px solid #cacbcc !important;\n  }\n  #cancellationClassLink {\n      color: blue;\n  }  \n</style>\n<script>\n  var myClassBookings=[];\n  var classSchedules=[];\n\tvar memberGUID;\n  var defaultDay=undefined;\n  function selectAnotherClass() {\n    $(\".dayButton\").removeClass(\"active\");\n    daysClasesDiv=$(\"#dayClasses\");\n    daysClasesDiv.empty();\n    K('section[Days Section]').show();\n    K('section[Preview]').hide();\n    selectDay(defaultDay);\n  }\n  \n  function selectDay(dateVal) {\ndebugger;\n    var dayID=moment(dateVal, \"YYYY-MM-DD\").day();\n    if (dayID===0) dayID=7;\n    K('field[Date Selected]').value(dateVal);\n    $(\"#daySelected\").text(moment(dateVal, \"YYYY-MM-DD\").format(\"LL\"));\n    $(\".dayButton\").removeClass(\"active\");\n    K('field[Date Selected]').value(dateVal)\n    $(window.event.target).addClass(\"active\");\n    daysClasesDiv=$(\"#dayClasses\");\n    daysClasesDiv.empty();\n    daysClasesDiv.append($('<div>', { class: 'spinner' }));\n\n    var maxWeeklyClasses=K('field[Max Weekly Classes]').value();\n    if (maxWeeklyClasses!==\"\"){\n      var thisWeek=moment(dateVal, \"YYYY-MM-DD\").week();\n      var weekBookings=myClassBookings.filter(booking => {\n        return thisWeek===moment(booking['Class Date']).week() && booking['Status']===\"Booked\";\n      });\n      if (weekBookings.length>=parseInt(maxWeeklyClasses)){\n        daysClasesDiv.empty();\n        daysClasesDiv.append($('<p>', { class: 'weeklyLimitReached' }).text(\"You have reached your weekly class booking allowance of \"+maxWeeklyClasses+\" classes.\"));\n\n        return;\n      }\n    }\n    K('bridgedResource[Day Bookings]').load({\n      attributes: ['Class Date', 'Class Time', 'Member GUID', 'Member ID', 'Member Name', 'Program', 'Status'],\n      values: {'Class Date' : dateVal},\n      success: function(bridgedData) {\n        \n        var daysClasses=[];\n    \t\tclassSchedules.forEach(element => {          \n          var day=parseInt(element[\"Start\"].split(\"-\")[0]);\n          if (day===dayID) {\n            if (moment().format(\"YYYY-MM-DD\")===moment(dateVal, \"YYYY-MM-DD\").format(\"YYYY-MM-DD\")) { // Today\n\t\t          var nowDay=moment();//.add(1,\"hours\");\n              var day=element[\"Start\"].split(\"-\")[0];\n              var hour = element[\"Start\"].split('-')[1].split(':')[0];\n              var minute = element[\"Start\"].split('-')[1].split(':')[1];\n\n              var showDate=moment()\n              .hour(hour)\n              .minute(minute)\n              .second(0);\n              if (showDate.isAfter(nowDay)) {\n\t            \tdaysClasses[daysClasses.length]=element;\n              }\n            } else {\n            \tdaysClasses[daysClasses.length]=element;\n            }\n          }  \n        });    \n      \tdaysClasses.sort(function(a, b) {\n    \t\t\tif (a[\"Start\"]<b[\"Start\"])\n            return -1;\n    \t\t\tif (a[\"Start\"]>b[\"Start\"])\n            return 1;\n          return 0;\n        });\n        daysClasesDiv.empty();\n        daysClasses.forEach((element) => {\n          var day=parseInt(element[\"Start\"].split(\"-\")[0]);\n          var start=element[\"Start\"].split(\"-\")[1];\n          var end=element[\"End\"].split(\"-\")[1];\n          var program=element[\"Program\"];\n          var title=element[\"Title\"];\n          var bookedCount=0;\n          bridgedData.forEach(element => {\n            if (element['Class Time']===start && element['Program']===program) bookedCount++;\n          });\n          \n          var idx=myClassBookings.findIndex(booking => {\n            return booking[\"Class Date\"]===dateVal && booking[\"Class Time\"]===start && booking[\"Program\"]===element[\"Program\"];\n          });\n          if (idx!==-1) {\n            var foundSchedule=classSchedules.filter(schedule => {\n                return parseInt(schedule['Start'].split(\"-\")[0])===moment(myClassBookings[idx]['Class Date'], \"YYYY-MM-DD\").day() \n                  && schedule['Start'].split(\"-\")[1]===myClassBookings[idx]['Class Time'];\n              });\n            var classTimeCutoff=undefined;\n            if (foundSchedule.length>0 && foundSchedule[0]['Cancellation Cutoff']!==undefined && foundSchedule[0]['Cancellation Cutoff']!==\"\" \n              && moment(myClassBookings[idx]['Class Date'], \"YYYY-MM-DD\").isSame(moment(myClassBookings[idx]['Class Date'], \"YYYY-MM-DD\"))\n              ) {\n              classTimeCutoff=moment().hour(myClassBookings[idx]['Class Time'].split(':')[0]).minute(myClassBookings[idx]['Class Time'].split(':')[1]);\n              classTimeCutoff=classTimeCutoff.subtract(parseInt(foundSchedule[0]['Cancellation Cutoff']), \"hours\");\n              classTimeCutoff=classTimeCutoff.second(0).millisecond(0);\n            }\n              if ((element['Colour']!==undefined && element['Colour']!==\"\") && (element['Text Colour']!==undefined && element['Text Colour']!==\"\")) {\n                classDiv=$('<div>', { class: 'classDiv', style:'background-color:'+element['Colour']+';color:'+element['Text Colour']});\n              } else if (element['Text Colour']!==undefined && element['Text Colour']!==\"\") {\n                classDiv=$('<div>', { class: 'classDiv', style:'color:'+element['Text Colour']});\n              } else if (element['Colour']!==undefined && element['Colour']!==\"\") {\n                classDiv=$('<div>', { class: 'classDiv', style:'background-color:'+element['Colour']});\n              } else {\n                classDiv=$('<div>', { class: 'classDiv '+element['Program'].replace(/ /g, \"_\") });\n              }\n              line1Div=$('<div>', {class: 'line1'});\n              line1Div.append($('<div>', { class: 'dates'}).text(moment(start, \"HH:mm\").format(\"LT\")+\"-\"+moment(end, \"HH:mm\").format(\"LT\")));\n              if (element['Max Students']!==undefined && element['Max Students']!==\"\")\n                line1Div.append($('<div>', { class: 'remaining'}).text(\"Open Spots: \"+(parseInt(element['Max Students'])-bookedCount)));\n              classDiv.append(line1Div);\n              classDiv.append($('<div>', { class: 'programDiv' }).text(element['Program']));\n              classDiv.append($('<div>', { class: 'titleDiv' }).text(element['Title']));\n              if (element['Coaches']!==\"\"){\n                classDiv.append($('<div>', { class: 'coachesDiv' }).text(\"Coach(es): \"+element['Coaches']));            \n              }\n              line1Div=$('<div>', {class: 'lastline'});\n              line1Div.append($('<div>', { class: 'studentsDiv' }).text('Max Students: '+(element['Max Students']!==undefined && element['Max Students']!=='' ? element['Max Students'] : 'No Limit')));\n              if (classTimeCutoff===undefined || (classTimeCutoff!==undefined && \n                moment().isBefore(classTimeCutoff))) {              \n                line1Div.append($('<div>', { class: 'cancelDiv' }).html($('<a>').attr(\"href\",\"/#/kapps/services/categories/class-bookings/cancel-class-booking?id=\"+myClassBookings[idx].id).text('Cancel Class')));\n              }\n              classDiv.append(line1Div);\n              daysClasesDiv.append(classDiv);          \n          } else {\n            if ((element['Colour']!==undefined && element['Colour']!==\"\") && (element['Text Colour']!==undefined && element['Text Colour']!==\"\")) {\n              classDiv=$('<div>', { class: 'classDiv', style:'background-color:'+element['Colour']+';color:'+element['Text Colour']});\n            } else if (element['Text Colour']!==undefined && element['Text Colour']!==\"\") {\n              classDiv=$('<div>', { class: 'classDiv', style:'color:'+element['Text Colour']});\n            } else if (element['Colour']!==undefined && element['Colour']!==\"\") {\n              classDiv=$('<div>', { class: 'classDiv', style:'background-color:'+element['Colour']});\n            } else {\n              classDiv=$('<div>', { class: 'classDiv '+element['Program'].replace(/ /g, \"_\") });\n            }\n            line1Div=$('<div>', {class: 'line1'});\n            line1Div.append($('<div>', { class: 'dates'}).text(moment(start, \"HH:mm\").format(\"LT\")+\"-\"+moment(end, \"HH:mm\").format(\"LT\")));\n            if (element['Max Students']!==undefined && element['Max Students']!==\"\")\n              line1Div.append($('<div>', { class: 'remaining'}).text(\"Open Spots: \"+(parseInt(element['Max Students'])-bookedCount)));\n            classDiv.append(line1Div);\n            classDiv.append($('<div>', { class: 'programDiv' }).text(element['Program']));\n            classDiv.append($('<div>', { class: 'titleDiv' }).text(element['Title']));\n            if (element['Coaches']!==\"\"){\n              classDiv.append($('<div>', { class: 'coachesDiv' }).text(\"Coach(es): \"+element['Coaches']));            \n            }\n            line1Div=$('<div>', {class: 'lastline'});\n            line1Div.append($('<div>', { class: 'studentsDiv' }).text('Max Students: '+(element['Max Students']!==undefined && element['Max Students']!=='' ? element['Max Students'] : 'No Limit')));\n            if (element['Max Students']!==undefined && element['Max Students']!==\"\" && (parseInt(element['Max Students'])-bookedCount)>0)\n              line1Div.append($('<button>', { class: 'booknow'}).text(\"Book Now\").click({\n                start: start, end: end, \n                program: element['Program'], title: element['Title'],\n                maxStudents: element['Max Students']\n              }, function(event) {\n                  debugger;\n                  $(\"#dateValue\").text(moment(K('field[Date Selected]').value()).format(\"LL\"));\n\n                  K('field[Start]').value(event.data.start);                \n                  K('field[End]').value(event.data.end);\n                  $(\"#timeValue\").text(moment(event.data.start, \"HH:mm\").format(\"LT\")+\"-\"+moment(event.data.end, \"HH:mm\").format(\"LT\"));\n                  \n                  K('field[Program]').value(event.data.program);\n                  $(\"#programValue\").text(event.data.program);\n                  K('field[Title]').value(event.data.title);\n                  $(\"#titleValue\").text(event.data.title);\n                  K('field[Max Students]').value(event.data.maxStudents);\n\n                  K('section[Days Section]').hide();                \n                  K('section[Preview]').show();                \n                })\n              );\n            classDiv.append(line1Div);\n            daysClasesDiv.append(classDiv);\n          } \n        });\n      }\n    });\n    console.log(\"selected Day:\"+dayID+\" Date:\"+dateVal); \n  }\n  function loadClasses() {\n    K('bridgedResource[Class Schedules]').load({\n      success: function(bridgedData) {\n        classSchedules = bridgedData;\n        var nowDay=moment();//.add(1,\"hours\");\n        var dateFormat=\"ll\";\n        var dayCount=0;\ndebugger;                        \n        classSchedules=classSchedules\n          .filter(schedule => {\n          \treturn schedule['Allowed Programs']===\"\" || schedule['Allowed Programs']===\"{}\"  || schedule['Allowed Programs']===\"[]\"\n                || schedule['Allowed Programs'].includes(K('field[Member Program]').value());\n          })\n          .sort(function(a, b) {\n          var aDay=a[\"Start\"].split(\"-\")[0];\n          var bDay=b[\"Start\"].split(\"-\")[0];\n          if (aDay<bDay)\n            return -1;\n          if (aDay>bDay)\n            return 1;\n          return 0;\n        });\n\n        allowDates=[];\n        for (i=0;i<15;i++){// 3 months\n          var startDay=moment().add(i*7, \"days\");\n          classSchedules.forEach(element => {\n            var dayNumber=element[\"Start\"].split(\"-\")[0];\n            var hour = element[\"Start\"].split('-')[1].split(':')[0];\n            var minute = element[\"Start\"].split('-')[1].split(':')[1];\n            \n            var showDate=startDay.day(parseInt(dayNumber))\n            .hour(hour)\n      \t\t\t.minute(minute)\n      \t\t\t.second(0);\n\n            if (showDate.isAfter(nowDay)){\n              allowDates[allowDates.length]= showDate.format(\"DD-MM-YYYY\");\n            }\n          }); \n        }        \n        bundle.config.widgets.xdsoftDatepicker({\n            element: K(\"form\").find(\"#classCalendar\")[0],\n            timepicker: false,\n            displayDateFormat: \"DD/MM/YYYY\",\n            options: {\n              allowDates: allowDates,\n              inline: true,\n              formatDate:\"d-m-Y\"\n            },\n            onSelectDate:function(ct,$i){\n              selectDay(ct.dateFormat('YYYY-MM-DD'));\n            } \n        });          \n        if (allowDates.length>0 && allowDates[0]===moment().format(\"DD-MM-YYYY\")){\n          defaultDay=moment().format(\"YYYY-MM-DD\");\n        }\n        loadMyBookings(defaultDay); \n      }\n    });    \n  }\n  \n  function agreeTerms(){\n    var url=\"/app/api/v1/submissions/\"+memberGUID;\n    var data={\n  \t\t\t\"values\": {\"Covid19 Waiver\":\"Agreed\"}\n\t\t\t};\n    K('section[Waiver Section]').hide();\n    $(\"#initialise\").show();\n    $.ajax({\n      type: \"PUT\",\n      url: url,\n      data: JSON.stringify(data),\n      dataType: \"json\",\n      success: function() {\n          loadClasses();        \n      },\n      contentType: \"application/json\",\n      accepts: {\n        mycustomtype: 'application/json'\n      },\n    });    \n  }\n  function noAgreeTerms(){\n    var url=\"/app/api/v1/submissions/\"+memberGUID;\n    var data={\n  \t\t\t\"values\": {\"Covid19 Waiver\":\"NOT Agreed\"}\n\t\t\t};\n    K('section[Waiver Section]').hide();\n    $(\"#initialise\").show();\n    $.ajax({\n      type: \"PUT\",\n      url: url,\n      data: JSON.stringify(data),\n      dataType: \"json\",\n      success: function() {\n  \t\t\tK('section[Waiver Reject]').show();\n\t\t    $(\"#initialise\").hide();\n      },\n      contentType: \"application/json\",\n      accepts: {\n        mycustomtype: 'application/json'\n      },\n    });    \n    \n  }\n  function loadMyBookings(defaultDay) {\n    K('bridgedResource[My Bookings]').load({\n      success: function(bridgedData) {\n        debugger;\n        var latest;\n        bridgedData.forEach(element =>  {\n          if (moment(moment(element['Class Date'], \"YYYY-MM-DD\").hour(element['Class Time'].split(':')[0]).minute(element['Class Time'].split(':')[1])).isAfter(moment())) {\n            myClassBookings[myClassBookings.length]=element;\n            bookingRow=$('<tr>');\n            bookingRow.append($('<td>').html(moment(element['Class Date'], \"YYYY-MM-DD\").hour(element['Class Time'].split(':')[0]).minute(element['Class Time'].split(':')[1]).format(\"LLLL\")));\n            bookingRow.append($('<td>').html(element['Program']+(element['Title']!==undefined && element['Title']!==\"\" ? '-'+element['Title'] : \"\")));\n            var foundSchedule=classSchedules.filter(schedule => {\n                return parseInt(schedule['Start'].split(\"-\")[0])===moment(element['Class Date'], \"YYYY-MM-DD\").day() \n                  && schedule['Start'].split(\"-\")[1]===element['Class Time'];\n              });\n            var classTimeCutoff=undefined;\n            if (foundSchedule.length>0 && foundSchedule[0]['Cancellation Cutoff']!==undefined && foundSchedule[0]['Cancellation Cutoff']!==\"\" \n              && moment(element['Class Date'], \"YYYY-MM-DD\").isSame(moment(element['Class Date'], \"YYYY-MM-DD\"))\n              ) {\n              classTimeCutoff=moment(element['Class Date'], \"YYYY-MM-DD\").hour(element['Class Time'].split(':')[0]).minute(element['Class Time'].split(':')[1]);\n              classTimeCutoff=classTimeCutoff.subtract(parseInt(foundSchedule[0]['Cancellation Cutoff']), \"hours\");\n              classTimeCutoff=classTimeCutoff.second(0).millisecond(0);\n            }\n            if (classTimeCutoff===undefined || (classTimeCutoff!==undefined && \n              moment().isBefore(classTimeCutoff))){\n              bookingRow.append($('<td>').html($('<a>').attr(\"href\",\"/#/kapps/services/categories/class-bookings/cancel-class-booking?id=\"+element['id']).text('Cancel Class')));\n            }\n            $(\"#bookingsTable tbody\").append(bookingRow);\n          }\n        });        \n        K('section[Already Booked]').show();\n        K('section[Days Section]').show();\n        $(\"#initialise\").hide();\n        if (defaultDay!==undefined){\n          selectDay(defaultDay);\n        }\n      }\n    });    \n  }\n\n</script>",
  "description": "",
  "name": "Book a Class",
  "notes": null,
  "pages": [
    {
      "advanceCondition": null,
      "displayCondition": null,
      "displayPage": null,
      "elements": [
        {
          "type": "content",
          "renderType": "html",
          "name": "Loading",
          "text": "<div id=\"initialise\" class=\"spinner\"></div>\n",
          "visible": "!form('review')",
          "renderAttributes": {
          }
        },
        {
          "type": "section",
          "renderType": null,
          "name": "Already Booked",
          "title": "",
          "visible": false,
          "omitWhenHidden": true,
          "renderAttributes": {
          },
          "elements": [
            {
              "type": "content",
              "renderType": "html",
              "name": "Latest Booking",
              "text": "<div class=\"myBooking\">\n  <h1>Current Bookings</h1>\n  <p id=\"maxWeeklyMsg\">You are limited to <span id=\"maxSchoolAmount\"></span> classes per week.</p>\n  <table id=\"bookingsTable\">\n    <thead>\n      <tr> \n        <th>Date Time</th>\n        <th>Program</th>\n        <th></th>\n      </tr>\n    </thead>\n    <tbody>\n      \n    </tbody>\n  </table>\n</div>",
              "visible": true,
              "renderAttributes": {
              }
            }
          ]
        },
        {
          "type": "section",
          "renderType": null,
          "name": "Waiver Section",
          "title": null,
          "visible": false,
          "omitWhenHidden": false,
          "renderAttributes": {
          },
          "elements": [
            {
              "type": "content",
              "renderType": "html",
              "name": "Waiver",
              "text": "<h4>Release and Waiver of Liability and Indemnity Agreement</h4>\n<br> \n<p>In consideration of being permitted to participate in any way in the Martial Arts Program either being by way of an online virtual platform or as indicated below and/or being permitted to enter for any purpose any restricted area (here in defined as any area where in admittance to the general public is prohibited), the parent(s) and/or legal guardian(s) of the minor participant named below agree:\n</p>\n<ol>\n  <li>\nThe parent(s) and/or legal guardian(s) will instruct the minor participant that prior to participating in the below martial arts activity or event, he or she should inspect the facilities and equipment to be used, and if he or she believes anything is unsafe, the participant should immediately advise the officials of such condition and refuse to participate. I understand and agreed that, if at any time, I feel anything to be UNSAFE, I will immediately take all precautions to avoid the unsafe area and REFUSE TO PARTICIPATE further.\n  </li>\n  <li>\nI/WE fully understand and acknowledge that:\n(a) There are risks and dangers associated with participation in martial arts events and activities which could result in bodily injury partial and/or total disability, paralysis and death.\n(b) The social and economic losses and/or damages, which could result from these risks and dangers described above, could be severe.\n(c) These risks and dangers may be caused by the action, inaction or negligence of the participant or the action, inaction or negligence of others, including, but not limited to, the Releasees named below.\n(d) There may be other risks not known to us or are not reasonably foreseeable at this time.\n  </li>\n  <li>\nI/WE accept and assume such risks and responsibility for the losses and/or damages following such injury, disability, paralysis or death, however caused and whether caused in whole or in part by the negligence of the Releasees named below including that at this time some human contact in the same location carries with it certain inherent risks that cannot be eliminated regardless of the care taken to avoid COVID-19 transmission. I understand and appreciate these and other risks are inherent in the activity I am participating in. I hereby assert that my participation is voluntary and that I knowingly assume all such risks and while aware of these risks I have elected to be present at the facility or to undertake online virtual training and participate in such training.\n  </li>\n  <li>\n    I/WE HEREBY RELEASE, WAIVE, DISCHARGE AND COVENANT NOT TO SUE <span id=\"legalName\"></span> and GB Oceania Association Pty Ltd, the martial arts facility used by the participant, including its owners, managers, promoters, lessees of premises used to conduct the martial arts event or program, premises and event inspectors, underwriters, consultants and others who give recommendations, directions, or instructions to engage in risk evaluation or loss control activities regarding the martial arts facility or events held at such facility and any online virtual training undertaken and each of them, their directors, officers, agents, employees, all for the purposes herein referred to as “Releasee”...FROM ALL LIABILITY TO THE UNDERSIGNED, my/our personal representatives, assigns, executors, heirs and next to kin FOR ANY AND ALL CLAIMS, DEMANDS, LOSSES OR DAMAGES AND ANY CLAIMS OR DEMANDS THEREFORE ON ACCOUNT OF ANY INJURY, INCLUDING BUT NOT LIMITED TO THE DEATH OF THE PARTICIPANT OR DAMAGE TO PROPERTY, ARISING OUT OF OR RELATING TO THE EVENT(S) CAUSED OR ALLEGED TO BE CAUSED IN WHOLE OR IN PART BY THE NEGLIGENCE OF THE RELEASEE OR OTHERWISE including all potential claims related to or resulting in personal injury or illnesses (including death) and property loss arising from any COVID-19 transmission that results from the undersigned being present at the facility and/or participating in the training online or otherwise.\n  </li>\n  <li>\nI/WE HEREBY acknowledge that THE ACTIVITIES OF THE EVENT(S) ARE VERY DANGEROUS and involve the risk of serious injury and/or death and/or property damage. Each of THE UNDERSIGNED also expressly acknowledges that INJURIES RECEIVED MAY BE COMPOUNDED OR INCREASED BY NEGLIGENT RESCUE OPERATIONS OR PROCEDURES OF THE RELEASEES. I attest that I have not tested positive for COVID-19 or if I have previously tested positive for COVID-19 I have been cleared by a medical professional that I no longer carry COVID-19. Additionally, I do not have any symptoms consistent with COVID-19 and I have not had any recent contact with anyone who has COVID-19.\n  </li>\n  <li>\nI/We also agree to indemnity and hold harmless Gracie Barra and any of its affiliates, its directors, officers, employees and agents from any and all claims, actions, suits, costs, expenses, damages and liabilities including attorney fees resulting from any COVID-19 transmission that occurs from being present at the facility or training outside the facility using the virtual platforms and participating in the training.\n  </li>\n  <li>\nEACH OF THE UNDERSIGNED further expressly agrees that the foregoing release, waiver, and indemnity agreement is intended to be as broad and inclusive as is permitted by the law of the Province or State in which the event is conducted and that if any portion is held invalid, it is agreed that the balance shall, notwithstanding continue in full legal force and effect.\n  </li>\n  <li>\nOn behalf of the participant and individually, the undersigned partner(s) and/or legal guardian(s) for the minor participant executes this Waiver and Release. If, despite this release, the participant makes a claim against any of the Releasees, the parent(s) and/or legal guardian(s) will reimburse the Releasee for any money which they have paid to the participant, or on his behalf, and hold them harmless.\n  </li>\n</ol> \n<strong>I HAVE READ THIS RELEASE AND WAIVER OF LIABILITY, ASSUMPTION OF RISK AND INDEMNITY AGREEMENT, FULLY UNDERSTAND ITS TERMS, UNDERSTAND THAT I HAVE GIVEN UP SUBSTANTIAL RIGHTS BY SIGNING IT, AND HAVE SIGNED IT FREELY AND VOLUNTARILY WITHOUT ANY INDUCEMENT, ASSURANCE, OR GUARANTEE BEING MADE TO ME AND INTEND MY SIGNATURE TO BE COMPLETE AND UNCONDITIONAL RELEASE OF ALL LIABILITY TO THE GREATEST EXTENT ALLOWED BY LAW.</strong>\n<br>\n<div class=\"waiverButtons\">\n  <button class=\"agree\" onclick=\"agreeTerms()\">\n    I Acknowledge and Accept the terms\n  </button>\n  <button class=\"notagree\" onclick=\"noAgreeTerms()\">\n    I DO NOT Acknowledge and Accept the terms\n  </button>\n</div>",
              "visible": true,
              "renderAttributes": {
              }
            }
          ]
        },
        {
          "type": "section",
          "renderType": null,
          "name": "Waiver Reject",
          "title": null,
          "visible": false,
          "omitWhenHidden": true,
          "renderAttributes": {
          },
          "elements": [
            {
              "type": "content",
              "renderType": "html",
              "name": "Reject Info",
              "text": "<h4>You cannot book a class, since you have chosen to not Accept the Terms and Conditions.</h4>\n\n<p>If you wish to reconsider the Terms and Conditions, reload the Form again.</p>",
              "visible": true,
              "renderAttributes": {
              }
            }
          ]
        },
        {
          "type": "section",
          "renderType": null,
          "name": "Days Section",
          "title": null,
          "visible": true,
          "omitWhenHidden": null,
          "renderAttributes": {
          },
          "elements": [
            {
              "type": "content",
              "renderType": "html",
              "name": "Days Options",
              "text": "<div id=\"classCalendar\">\n</div>\n",
              "visible": true,
              "renderAttributes": {
              }
            },
            {
              "type": "content",
              "renderType": "html",
              "name": "Day Classes",
              "text": "<div id=\"daySelected\"></div>\n<div id=\"dayClasses\"></div>",
              "visible": true,
              "renderAttributes": {
              }
            }
          ]
        },
        {
          "type": "section",
          "renderType": null,
          "name": "Booking Questions",
          "title": null,
          "visible": "!form('review')",
          "omitWhenHidden": false,
          "renderAttributes": {
          },
          "elements": [
            {
              "type": "field",
              "name": "Travel in Fourteen days",
              "label": "Have you or your partner part taken in any travel, interstate or international in the last 14 days?",
              "key": "f17",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": false,
              "enabled": true,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": true,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "radio",
              "choicesResourceName": null,
              "choicesRunIf": null,
              "choices": [
                {
                  "label": "Yes",
                  "value": "Yes"
                },
                {
                  "label": "No",
                  "value": "No"
                }
              ]
            },
            {
              "type": "field",
              "name": "Contact Made",
              "label": "Have you come into contact with a COVID-19 case?",
              "key": "f16",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": false,
              "enabled": true,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": true,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "radio",
              "choicesResourceName": null,
              "choicesRunIf": null,
              "choices": [
                {
                  "label": "Yes",
                  "value": "Yes"
                },
                {
                  "label": "No",
                  "value": "No"
                }
              ]
            },
            {
              "type": "field",
              "name": "Night sweats and chills",
              "label": "Have a fever of 37c or more, or a history suggestive of fever (night sweats, chills?)",
              "key": "f14",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": false,
              "enabled": true,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": true,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "radio",
              "choicesResourceName": null,
              "choicesRunIf": null,
              "choices": [
                {
                  "label": "Yes",
                  "value": "Yes"
                },
                {
                  "label": "No",
                  "value": "No"
                }
              ]
            },
            {
              "type": "field",
              "name": "Respiratory Infection",
              "label": "Acute respiratory infection (cough, shortness of breath)",
              "key": "f15",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": false,
              "enabled": true,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": true,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "radio",
              "choicesResourceName": null,
              "choicesRunIf": null,
              "choices": [
                {
                  "label": "Yes",
                  "value": "Yes"
                },
                {
                  "label": "No",
                  "value": "No"
                }
              ]
            },
            {
              "type": "field",
              "name": "Have you been to Victoria",
              "label": "Have you been to Victoria in the last 14 days?",
              "key": "f18",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": false,
              "enabled": true,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": true,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "radio",
              "choicesResourceName": null,
              "choicesRunIf": null,
              "choices": [
                {
                  "label": "Yes",
                  "value": "Yes"
                },
                {
                  "label": "No",
                  "value": "No"
                }
              ]
            }
          ]
        },
        {
          "type": "section",
          "renderType": null,
          "name": "Preview",
          "title": "Review Booking",
          "visible": false,
          "omitWhenHidden": false,
          "renderAttributes": {
            "class": "previewSection"
          },
          "elements": [
            {
              "type": "content",
              "renderType": "html",
              "name": "How it works",
              "text": "<div class=\"details\">\n    <p>HOW WILL IT WORK</p>\n    <br>\n    <p>Stage 3 consists of our contact classes where students can come into the school, and get back to training! Social distancing must be followed where practical.</p>\n    <br>\n    <p>Please Download the COVIDSafe App here <a href=\"https://www.health.gov.au/resources/apps-and-tools/covidsafe-app#get-the-app\" target=\"_blank\">https://www.health.gov.au/resources/apps-and-tools/covidsafe-app#get-the-app</a></p>\n    <br>\n    <p>If you are experiencing cold symptoms or feeling unwell, please do not attend the school.</p>\n    <br>\n    <p>In order to maintain social distancing and hygiene practices, we ask our students to please do the following:</p>\n    <p>● Come dressed in your uniform</p>\n    <p>● Bring your own bottle of water</p>\n    <p>● Use the sanitisation stations before/after classes</p>\n    <p>● Wait for instructor's direction when entering and exiting the mats</p>\n    <p>● Avoid using the changing rooms/restrooms</p>\n    <p>● As much as we all miss each other, please refrain from hugging / handshaking / or any physical contact with your teammates.</p>\n</div>",
              "visible": true,
              "renderAttributes": {
                "class": "howitworks"
              }
            },
            {
              "type": "content",
              "renderType": "html",
              "name": "Review Details",
              "text": "<div class=\"details\">\n  <table>\n    <tr>\n      <td class=\"header\">Class Date:</td><td class=\"value\" id=\"dateValue\"></td>\n    </tr>\n    <tr>\n      <td class=\"header\">Program:</td><td class=\"value\" id=\"programValue\"></td>\n    </tr>\n    <tr>\n      <td class=\"header\">Title:</td><td class=\"value\" id=\"titleValue\"></td>\n    </tr>\n    <tr>\n      <td class=\"header\">Class Time:</td><td class=\"value\" id=\"timeValue\"></td>\n    </tr>\n    <tr>\n      <td colspan=\"2\">\n        <div id=\"bookingQuestions\"></div>\n      </td>\n    </tr>\n    <tr>\n      <td>\n        <button class=\"anotherClass\" onclick=\"selectAnotherClass()\">\n          Select another Class\n        </button>\n      </td>\n      <td>\n        <div id=\"completeBooking\">\n        </div>\n      </td>      \n    </tr>\n    <tr>\n      <td>\n        <div id=\"submitSpinner\" class=\"spinner hide\"></div>\n      </td>\n    </tr>\n  </table>\n</div>",
              "visible": true,
              "renderAttributes": {
                "class": "reviewdetails"
              }
            }
          ]
        },
        {
          "type": "section",
          "renderType": null,
          "name": "Booking Details",
          "title": null,
          "visible": "form('review')",
          "omitWhenHidden": false,
          "renderAttributes": {
          },
          "elements": [
            {
              "type": "field",
              "name": "Date Selected",
              "label": "Date Selected",
              "key": "f1",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": true,
              "enabled": true,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": null,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "field",
              "name": "Start",
              "label": "Start",
              "key": "f2",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": true,
              "enabled": true,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": null,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "field",
              "name": "End",
              "label": "End",
              "key": "f3",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": true,
              "enabled": true,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": null,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "field",
              "name": "Program",
              "label": "Program",
              "key": "f4",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": true,
              "enabled": true,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": null,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "field",
              "name": "Title",
              "label": "Title",
              "key": "f5",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": true,
              "enabled": true,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": null,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            }
          ]
        },
        {
          "type": "section",
          "renderType": null,
          "name": "Hidden Fields",
          "title": null,
          "visible": false,
          "omitWhenHidden": false,
          "renderAttributes": {
          },
          "elements": [
            {
              "type": "field",
              "name": "Today",
              "label": "Today",
              "key": "f11",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": true,
              "enabled": true,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": null,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "date"
            },
            {
              "type": "field",
              "name": "Member ID",
              "label": "Member ID",
              "key": "f7",
              "defaultValue": "",
              "defaultResourceName": null,
              "visible": true,
              "enabled": true,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": null,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "field",
              "name": "Member GUID",
              "label": "Member GUID",
              "key": "f8",
              "defaultValue": "",
              "defaultResourceName": "",
              "visible": true,
              "enabled": true,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": null,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "field",
              "name": "Member Name",
              "label": "Member Name",
              "key": "f9",
              "defaultValue": "",
              "defaultResourceName": "",
              "visible": true,
              "enabled": true,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": null,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "field",
              "name": "Member Program",
              "label": "Member Program",
              "key": "f19",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": true,
              "enabled": true,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": null,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "field",
              "name": "Max Students",
              "label": "Max Students",
              "key": "f6",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": true,
              "enabled": true,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": null,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "field",
              "name": "Max Weekly Classes",
              "label": "Max Weekly Classes",
              "key": "f20",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": true,
              "enabled": true,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": null,
              "pattern": null,
              "constraints": [

              ],
              "events": [
                {
                  "name": "Value applied",
                  "type": "Change",
                  "action": "Custom",
                  "code": "$(\"#maxWeeklyMsg\").show();\n$(\"#maxSchoolAmount\").html(K('field[Max Weekly Classes]').value());",
                  "runIf": "values('Max Weekly Classes')!==\"\""
                }
              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "field",
              "name": "Cancellation Cutoff",
              "label": "Cancellation Cutoff",
              "key": "f21",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": true,
              "enabled": true,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": null,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            },
            {
              "type": "field",
              "name": "Class Booking ID",
              "label": "Class Booking ID",
              "key": "f10",
              "defaultValue": null,
              "defaultResourceName": null,
              "visible": true,
              "enabled": true,
              "required": false,
              "requiredMessage": null,
              "omitWhenHidden": null,
              "pattern": null,
              "constraints": [

              ],
              "events": [

              ],
              "renderAttributes": {
              },
              "dataType": "string",
              "renderType": "text",
              "rows": 1
            }
          ]
        },
        {
          "type": "button",
          "label": "Complete Booking",
          "name": "Submit Button",
          "visible": true,
          "enabled": true,
          "renderType": "submit-page",
          "renderAttributes": {
          }
        }
      ],
      "events": [
        {
          "name": "Initialise",
          "type": "Load",
          "action": "Custom",
          "code": "\n$(\"#completeBooking\").append($(K('button[Submit Button]').element()).detach());",
          "runIf": "!form('review')"
        },
        {
          "name": "Validation",
          "type": "Submit",
          "action": "Custom",
          "code": "K('button[Submit Button]').disable();\n$(\"#submitSpinner\").removeClass(\"hide\");\nK('bridgedResource[Class Bookings]').load({\n  success: function(bridgedData) {\n    if (bridgedData.length>=parseInt(K('field[Max Students]').value())) {\n    \talert(\"Sorry too late\");    \n\t\t\taction.stop();\n      K('button[Submit Button]').enable()\n  \t}\n  }\n});\n"
        },
        {
          "name": "Load Form",
          "type": "Load",
          "action": "Custom",
          "code": "$(\"#bookingQuestions\").append(K('section[Booking Questions]').element());\n\nsetTimeout(function() {\nK('field[Today]').value(moment().format(\"YYYY-MM-DD\"));\n  K('bridgedResource[Load Member]').load({\n    success: function(bridgedData) {\n      memberGUID=bridgedData.id;\n      K('field[Member ID]').value(bridgedData['Member ID']);\n      K('field[Member GUID]').value(bridgedData['id']);\n      K('field[Member Program]').value(bridgedData['Program']);\n      K('field[Max Weekly Classes]').value(bridgedData['Max Weekly Classes']);\n      \n      K('field[Member Name]').value(bridgedData['First Name']+' '+bridgedData['Last Name']);\n      debugger;\n      if (bridgedData['Covid19 Waiver']===undefined || bridgedData['Covid19 Waiver']===\"\" || bridgedData['Covid19 Waiver']===\"NOT Agreed\") {\n        $(\"#initialise\").hide();\n        debugger;\n        $(\"#legalName\").text(K('space').attributes('School Legal Name'));\n        K('section[Waiver Section]').show();      \n      } else {\n        setTimeout(function() {loadClasses();}, 200);\n      } \n    }\n  });\n\n  \n}, 100);\n",
          "runIf": "!form('review')"
        }
      ],
      "name": "Main",
      "renderType": "submittable",
      "type": "page"
    }
  ],
  "securityPolicies": [
    {
      "endpoint": "Display",
      "name": "Authenticated Users"
    },
    {
      "endpoint": "Submission Access",
      "name": "Authenticated Users"
    },
    {
      "endpoint": "Submission Modification",
      "name": "Authenticated Users"
    }
  ],
  "slug": "book-a-class",
  "status": "Active",
  "submissionLabelExpression": "",
  "type": "Service"
}